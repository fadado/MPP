#|######################################################################
# Mathematical macros
# Usage: ${import math}
######################################################################|#

${ifndef __math__}
${define __math__}

${import control}

#|######################################################################
# ${abs n}
#
# Absolute value.
#|#
${define ${abs n}
    ${iif "${n} >= 0" $1 ${eval -(${n})}}
}

#|######################################################################
# ${incr n}
# ${decr n}
#
# Increment/Decrement n.
#|#
${define ${incr n} ${eval ${n} + 1}}
${define ${decr n} ${eval ${n} - 1}}

#|######################################################################
# ${sign n}
#
# Sign function.
#|#
${define ${sign n}
    ${if ${n} > 0}1${elif ${n} < 0}-1${else}${eval ${n} + 0}${endif}
}

#|######################################################################
# ${fact n}
#
# Factorial function.
#|#
${define ${fact n} ${if ${n} >= 0}${_fact ${n} 1}${endif}}

#| _fact{n accumulator}
#
#  Return accumulator if n <= 1
#  else decrement n, increment accumulator, and recurse.
#|#
${define ${_fact n a}
${if ${n} <= 1}&
${defeval _fact_step ${a}}&
${else}&
${defeval _fact_step ~${_fact ${eval ${n} - 1} ${eval ${a} * ${n}}}}&
${endif}&
${_fact_step}
}

${endif} #| ${ifndef __math__} |#

#|
vim:ts=4:sw=4:ai:et:fileencoding=utf8:syntax=perl
|#
