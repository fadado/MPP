#|######################################################################
# Prelude macros
# Imported from _prelude.mpp
######################################################################|#

${import control}

#|######################################################################
# ${id [text]}
#
# Equivalent to null (${id}) and identity (${id x}).
#|#&
${define id $1}

#|######################################################################
 # ${assign name expression}
 #
 # Assign to name the value of expression.
#|#
${define ${assign _name _expression}
    ${defeval __assign
        ~${defeval ${_name} ~${eval ${_expression}}}
    }${__assign}${undef __assign}
}

#|######################################################################
# ${call name arg...}
#
# Call an user macro by name.
#|#
${define call
    ${defeval __call
       ~${ifdef $1}~${$1 <<$2>> <<$3>> <<$4>> <<$5>> <<$6>> <<$7>> <<$8>> <<$9>>}~${endif}
    }${__call}${undef __call}
}

#|######################################################################
# ${counter name start [increment]}
#
# Define an integer generator from start by increment.
#|#
${define ${counter _name _start _inc}
    ${defeval __counter
        ~${define _${_name}_ ${_start}
        }~${define ${_name}
            ~${_${_name}_}~${assign _${_name}_
                "~${_${_name}_} + ${ifeq ;${_inc}; ;;}1${else}${_inc}${endif}"}}
    }${__counter}${undef __counter}
}

#|######################################################################
 # ${defpart name file}
 #
 # Define name as a macro with contents of file as a body.
#|#
${define ${defpart _name _file}
    ${defeval __defpart
        ~${defeval ${_name} ~${mode quote}~${include ${_file}}~${mode quote "~"}}
    }${__defpart}${undef __defpart}
}

#|######################################################################
# ${partial file arg...}
#
# Like include but passing (up to 8) parameters to the included file.
#|#
${define partial
    ${defeval __partial
        ~${defeval __partial
            ~${mode quote}~${include $1}~${mode quote "~"}}
    }${__partial}${__partial $2 $3 $4 $5 $6 $7 $8 $9
    }${undef __partial}
}

#|######################################################################
# ${print [text]}
#
# Output one line of text using the predefined macro $NL.
#|#
${define ${print _text}
    ${_text}${NL}
}

#|######################################################################
# Only for interactive mpp
#|#
${ifdef __IMPP__}

#|######################################################################
# ${read}
#
# Read one CR terminated line of text followed by EOF (^D on Unix, ^Z on
# MSDOS derived shells).
#|#
${define read ${exec echo -n `cat`} }

${endif}

#|
vim:ts=4:sw=4:ai:et:fileencoding=utf8:syntax=perl
|#
