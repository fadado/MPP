#|######################################################################
# MPP prelude user macros
######################################################################|#

${ifndef __prelude__}
${define __prelude__}

#| TODO: Full set of skips
${mode string ccc "#c<" ">" ""}
${mode string CCC "#C<" ">" ""}
${mode string sss "#s<" ">" ""}
${mode string SSS "#S<" ">" ""}
${mode string qqq "#q<" ">" ""}
${mode string QQQ "#Q<" ">" ""}
|#

#|######################################################################
# MPP default syntax.
# To change syntax to, for example, cpp:
#      ${mode standard cpp}
# To restore MPP syntax:
#      ${mode user $MPP_SYNTAX}${mode meta user}
#|#
${define MPP_SYNTAX "${\W" "\W}" "\B" "\B" "\W}" "{" "}" "$" ""}

#|######################################################################
# ${call name arg...}
#
# Call an user macro by name.
#|#
${define call
    ${defeval __call
       ~${ifdef $1}~${$1 '$2' '$3' '$4' '$5' '$6' '$7' '$8' '$9'}~${endif}
    }${__call}${undef __call}
}

#|######################################################################
# ${defcount name start [increment]}
#
# Define an integer generator from start by increment.
#|#
${define defcount
    ${defeval __defcount
        ~${define _$1_ $2}~${define $1
            ~${_$1_}~${defeval _$1_ ~${eval ~${_$1_} + ${ifeq ;$3; ;;}1${else}$3${endif}}}}
    }${__defcount}${undef __defcount}
}

#|######################################################################
# ${defpart name filename}... ${name arg...}
#
# Define name as a macro with contents of file as a body.
#|#
${define ${defpart name filename}
    ${defeval __defpart
        ~${defeval ${name}
            ~${mode quote}~${include ${filename}}~${mode quote "~"}}
    }${__defpart}${undef __defpart}
}

${endif} #| ${ifndef __prelude__} |#

#|
vim:ts=4:sw=4:ai:et:fileencoding=utf8:syntax=perl
|#
