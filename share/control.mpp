#|######################################################################
# Control structures
# Usage: ${import control}
######################################################################|#

${ifndef __control__}
${define __control__}

#|######################################################################
# ${halt}
#
# Send MPP the TERM signal.
#|#
${define halt 
    ${exec kill -s TERM ${PID}}
}

#|######################################################################
# ${repeat N name arg...}
#
# Call N times an user macro by name.
#
# First argument to macro name is the loop index (1..N).
# Uses global $_repeat_index.
# Can't nest repeats!
#|#
${define repeat
    ${define _repeat_index 1
    }${_repeat $1 $2 $3 $4 $5 $6 $7 $8 $9}
}

#| _repeat{N name arg...} |#
${define _repeat
${if ${_repeat_index} > $1}&
${define _repeat_step}&
${else}&
${call $2 ${_repeat_index} $3 $4 $5 $6 $7 $8 $9}&
${assign _repeat_index "${_repeat_index} + 1"}&
${defeval _repeat_step ~${_repeat '$1' '$2' '$3' '$4' '$5' '$6' '$7' '$8' '$9'}}&
${endif}&
${_repeat_step}&
}

#|######################################################################
# ${while test body}
#
# Can't nest whiles!
#|#
${define ${while test body}
${defeval _while_test ${test}}&
${if ${_while_test}}&
${defeval _while_step ${body}~${while '${test}' '${body}'}}&
${else}&
${define _while_step}&
${endif}&
${_while_step}&
}

#|######################################################################
# ${for name from to by body}
#
#|#


${endif} #| ${ifndef __control__} |#

#|
vim:ts=4:sw=4:ai:et:fileencoding=utf8:syntax=perl
|#
