#|######################################################################
# Control structures
# Usage: ${import control}
######################################################################|#

${ifndef __control__}
${define __control__}

#|######################################################################
# ${halt}
#
# Send MPP the TERM signal.
#|#
${define halt 
    ${exec kill -s TERM ${PID}}
}

#|######################################################################
# ${repeat N name arg...}
#
# Call N times an user macro by name.
#
# First argument to macro name is the loop index (1..N).
#|#
${define repeat
    ${_repeat 1 $1 $2 $3 $4 $5 $6 $7 $8}
}

#| _repeat{i N name arg...} |#
${define _repeat
${if $1 > $2}&
${define _repeat_step}&
${else}&
${call $3 $1 $4 $5 $6 $7 $8 $9}&
${defeval _repeat_step
    ~${_repeat ${eval $1+1} $2 $3 <<$4>> <<$5>> <<$6>> <<$7>> <<$8>> <<$9>>}}&
${endif}&
${_repeat_step}&
}

#|######################################################################
# ${while test body}
#
# Iterate until test fails.
#|#
${define ${while _test _body}
${defeval _while_test ${_test}}&
${if ${_while_test}}&
${defeval _while_step
    ${_body}~${while <<${_test}>> <<${_body}>>}}&
${else}&
${define _while_step}&
${endif}&
${_while_step}&
}

#|######################################################################
# ${for name from to by body}
#
#|#
${define ${for _name _from _to _by _body}
    ${assign ${_name} ${_from}
    }${while '${call ${_name}} <= ${_to}'
        '${_body}${assign ${_name} ${_name}+${_by}}'
    }
}


${endif} #| ${ifndef __control__} |#

#|
vim:ts=4:sw=4:ai:et:fileencoding=utf8:syntax=perl
|#
